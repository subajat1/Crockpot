# Generated by Django 2.2.5 on 2019-11-16 07:03

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('media', models.CharField(blank=True, max_length=1024, null=True)),
                ('icon', models.CharField(blank=True, max_length=1024, null=True)),
                ('slug', models.SlugField(unique=True)),
            ],
            options={
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Ingredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('icon', models.CharField(blank=True, max_length=1024, null=True)),
                ('media_raw', models.CharField(blank=True, max_length=1024, null=True)),
                ('health_raw', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('hunger_raw', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('sanity_raw', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('nutrition_raw', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('perish_raw', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('media_cooked', models.CharField(blank=True, max_length=1024, null=True)),
                ('health_cooked', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('hunger_cooked', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('sanity_cooked', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('nutrition_cooked', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('perish_cooked', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('log', models.TextField(blank=True, default='', null=True)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ing_category', to='cook.Category')),
            ],
            options={
                'verbose_name': 'Ingredient',
                'verbose_name_plural': 'Ingredients',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('media', models.CharField(blank=True, max_length=1024, null=True)),
                ('health', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('hunger', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('sanity', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('nutrition', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('perish', models.DecimalField(blank=True, decimal_places=3, max_digits=7)),
                ('cook_time', models.DecimalField(blank=True, decimal_places=2, max_digits=5)),
                ('restrictions', models.CharField(blank=True, max_length=1024, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.BooleanField(default=True)),
                ('log', models.TextField(blank=True, default='', null=True)),
            ],
            options={
                'verbose_name': 'Recipe',
                'verbose_name_plural': 'Recipes',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('slug', models.SlugField(unique=True)),
                ('icon', models.CharField(blank=True, max_length=1024, null=True)),
                ('media', models.CharField(blank=True, max_length=1024, null=True)),
            ],
            options={
                'verbose_name': 'Store',
                'verbose_name_plural': 'Stores',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='RecipeIngredient',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=512, null=True)),
                ('ingredient', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ri_ingredient', to='cook.Ingredient')),
                ('recipe', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ri_recipe', to='cook.Recipe')),
            ],
        ),
        migrations.AddField(
            model_name='recipe',
            name='store',
            field=models.ManyToManyField(related_name='recipe_store', to='cook.Store'),
        ),
        migrations.AddField(
            model_name='ingredient',
            name='store',
            field=models.ManyToManyField(related_name='ing_store', to='cook.Store'),
        ),
    ]
